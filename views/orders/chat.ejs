<div class="container mt-4">
    <div class="row">
        <div class="col-lg-8 mx-auto">
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-header text-white" style="background: linear-gradient(135deg, #ff6b35 0%, #f7931e 100%);">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">
                            <i class="fas fa-comments me-2"></i>
                            Chat del Pedido #<%= order.numero_pedido || 'N/A' %>
                        </h5>
                        <a href="/orders/<%= order.id %>" class="btn btn-sm btn-back-order">
                            <i class="fas fa-arrow-left me-2"></i> Volver al Pedido
                        </a>
                    </div>
                </div>
                <div class="card-body p-0 d-flex flex-column" style="height: 60vh;">
                    <div id="chat-messages" class="p-3 overflow-auto flex-grow-1">
                        <!-- Los mensajes se cargarán dinámicamente desde Socket.IO -->
                        <div id="loading-messages" class="text-center text-muted py-5">
                            <i class="fas fa-spinner fa-spin fa-2x mb-3"></i>
                            <p>Cargando mensajes...</p>
                        </div>
                    </div>
                    <form id="chat-form" class="chat-input border-top p-3 bg-light d-flex align-items-center">
                        <input type="text" id="chat-message-input" class="form-control me-2" placeholder="Escribe un mensaje...">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-paper-plane"></i> Enviar
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .btn-back-order {
        background-color: rgba(255, 255, 255, 0.2);
        color: white;
        border-radius: 20px;
        padding: 5px 15px;
        text-decoration: none;
        transition: background-color 0.3s ease;
    }
    .btn-back-order:hover {
        background-color: rgba(255, 255, 255, 0.3);
        color: white;
    }
    .chat-messages {
        background-color: #f4f6f8;
    }
    .message {
        display: flex;
        margin-bottom: 15px;
    }
    .message.sent {
        justify-content: flex-end;
    }
    .message.received {
        justify-content: flex-start;
    }
    .message-content {
        max-width: 70%;
        padding: 10px 15px;
        border-radius: 20px;
        word-wrap: break-word;
        position: relative;
    }
    .message.sent .message-content {
        background-color: #e1e1e1; /* Gris claro para enviados */
        color: #333;
        border-bottom-right-radius: 5px;
    }
    .message.received .message-content {
        background-color: #d1e7dd; /* Un verde suave para recibidos */
        color: #0f5132;
        border-bottom-left-radius: 5px;
    }
    .message-text {
        margin: 0;
    }
    .message-time {
        font-size: 0.7em;
        color: #6c757d;
        display: block;
        margin-top: 5px;
        text-align: right;
    }
</style>

<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.7.2/socket.io.js"></script>
<script src="/js/dashboard-orders-chat.js"></script>

<script>
document.addEventListener('DOMContentLoaded', () => {
    const orderId = <%= order.id %>;
    const chatContainer = document.querySelector('.card-body');

    // La función getUserData() está en app.js, que debería estar incluido en el layout principal.
    // Nos aseguramos de que app.js se cargue antes que este script si es necesario.
    if (typeof getUserData !== 'function') {
        console.error('ERROR: getUserData() no está definida. Asegúrate de que app.js se carga antes que este script.');
        if(chatContainer) {
            chatContainer.querySelector('#chat-messages').innerHTML = '<p class="text-danger text-center">Error crítico al cargar el chat. Contacte a soporte.</p>';
        }
        return;
    }

    const currentUser = getUserData();
    console.log('DEBUG: Current User in /orders/chat:', currentUser);

    if (!currentUser || !currentUser.id || !currentUser.tipo_usuario) {
        console.error('ERROR: No se pudieron obtener los datos del usuario para inicializar el chat.');
        if(chatContainer) {
            chatContainer.querySelector('#chat-messages').innerHTML = '<p class="text-danger text-center">No se pudo verificar tu identidad para el chat. Por favor, inicia sesión de nuevo.</p>';
        }
        return;
    }

    if (typeof initializeChatListeners === 'function') {
        // Esperar a que el socket se conecte si es necesario (lógica similar a la otra vista)
        function setupChatWhenSocketReady() {
            if (window.socket && window.socket.connected) {
                console.log('DEBUG: Socket.IO está conectado. Llamando a initializeChatListeners.');
                initializeChatListeners(orderId, currentUser.id, currentUser.tipo_usuario, chatContainer);
            } else {
                console.log('DEBUG: Socket.IO no está conectado aún. Esperando...');
                setTimeout(setupChatWhenSocketReady, 100); // Reintentar en 100ms
            }
        }
        setupChatWhenSocketReady();
    } else {
        console.error('ERROR: initializeChatListeners no está definida.');
    }
});
</script>
